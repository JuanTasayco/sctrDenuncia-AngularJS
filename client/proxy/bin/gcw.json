[
  {
    "name": "SelfSettlement",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "selfSettlementGetPendingCommissions",
        "path": "api/self-settlement/comissions",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Commission.SelfSettlement.GetListComissionRequest",
            "nameType": "GetListComissionRequest",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "selfSettlementAgentValidation",
        "path": "api/self-settlement/validation",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "request",
            "type": "Gcw.Rest.Model.Commission.SelfSettlement.ValidationRequest",
            "nameType": "ValidationRequest",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "selfSettlementGenerationPaymentOrders",
        "path": "api/self-settlement/payment-order/massive",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "paymentOrder",
            "type": "Gcw.Rest.Model.Commission.SelfSettlement.CreatePaymentOrdersRequest",
            "nameType": "CreatePaymentOrdersRequest",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "selfSettlementCancellationPaymentOrders",
        "path": "api/self-settlement/payment-order/{orderId}/cancellation",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "orderId",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "request",
            "type": "Gcw.Rest.Model.Commission.SelfSettlement.CancelPaymentOrderRequest",
            "nameType": "CancelPaymentOrderRequest",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "selfSettlementInvoiceUploader",
        "path": "api/self-settlement/invoice/uploader",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "request",
            "type": "Gcw.Rest.Model.Commission.SelfSettlement.InvoiceUploaderRequest",
            "nameType": "InvoiceUploaderRequest",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      }
    ]
  },
  {
    "name": "Generated",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getCommissionListGenerated",
        "path": "api/commission/generated/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Commission.GeneratedFilterRp",
            "nameType": "GeneratedFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getCommissionReportGenerated",
        "path": "api/commission/generated/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      },
      {
        "httpMethod": "post",
        "methodName": "GetList",
        "path": "api/commission/generated/getList",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      }
    ]
  },
  {
    "name": "Accident",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getDetailAccident",
        "path": "api/accident/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Portfolio.PolicyDetailFilterRp",
            "nameType": "PolicyDetailFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      }
    ]
  },
  {
    "name": "Detraction",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getCommissionListDetractionPaging",
        "path": "api/commission/detraction/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Commission.DetractionFilterRp",
            "nameType": "DetractionFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "GetDetraction",
        "path": "api/commission/detraction",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Commission.DetractionFilterRp",
            "nameType": "DetractionFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getCommissionReportDetraction",
        "path": "api/commission/detraction/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      }
    ]
  },
  {
    "name": "NetworkAgent",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getListNetworkTray",
        "path": "api/networkagent/agenttray/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.NetworkAgent.NetworkTrayFilterRp",
            "nameType": "NetworkTrayFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getListAgentClient",
        "path": "api/networkagent/agentclient/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.NetworkAgent.AgentClientFilterRp",
            "nameType": "AgentClientFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getListAgentClientDetail",
        "path": "api/networkagent/agentclientdetail/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.NetworkAgent.AgentClientDetailFilterRp",
            "nameType": "AgentClientDetailFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "get",
        "methodName": "getListAgentClientFilterIntegrality",
        "path": "api/networkagent/agentclient/filterintegrality",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "getListAgentClientFilterExpirationPolicy",
        "path": "api/networkagent/agentclient/filterexpirationpolicy",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "getListAgentClientFilterDelinquency",
        "path": "api/networkagent/agentclient/filterdelinquency",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "getListAgentClientFilterPolicyType",
        "path": "api/networkagent/agentclient/filterpolictytype",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "post",
        "methodName": "getListAgentClientDetailDownload",
        "path": "api/networkagent/agentclientdetail/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.NetworkAgent.AgentClientDetailFilterRp",
            "nameType": "AgentClientDetailFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getListAgentClientDownload",
        "path": "api/networkagent/agentclient/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.NetworkAgent.AgentClientFilterRp",
            "nameType": "AgentClientFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      }
    ]
  },
  {
    "name": "DashboardOffice",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getIntegralitySection",
        "path": "api/dashboardoffice/integrality",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.NetworkAgent.EvolutionIntegralityFilterRp",
            "nameType": "EvolutionIntegralityFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getPolicyIndicatorSection",
        "path": "api/dashboardoffice/policyindicator",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.NetworkAgent.DashboardIndicatorPolicyFilterRp",
            "nameType": "DashboardIndicatorPolicyFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getAgentDetail",
        "path": "api/dashboardoffice/agentdetail",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.NetworkAgent.DashboardAgentDetailFilterRp",
            "nameType": "DashboardAgentDetailFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getSummaryIntegrality",
        "path": "api/dashboardoffice/integralitysummary",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Core.Entities.BaseFilterDashboard",
            "nameType": "BaseFilterDashboard",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getSummaryIntegralityYear",
        "path": "api/dashboardoffice/integralitysummaryyear",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Core.Entities.BaseFilterDashboard",
            "nameType": "BaseFilterDashboard",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getSummaryPolicyType",
        "path": "api/dashboardoffice/policytypesummary",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Core.Entities.BaseFilterDashboard",
            "nameType": "BaseFilterDashboard",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getTotalClients",
        "path": "api/dashboardoffice/totalclients",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Core.Entities.BaseFilterDashboard",
            "nameType": "BaseFilterDashboard",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getListAgentDetailDownload",
        "path": "api/dashboardoffice/agentdetail/downloadd",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.NetworkAgent.DashboardAgentDetailFilterRp",
            "nameType": "DashboardAgentDetailFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      }
    ]
  },
  {
    "name": "BranchClient",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getCommissionListBranchClient",
        "path": "api/commission/branchClient/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Commission.BranchClientFilterRp",
            "nameType": "BranchClientFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getCommissionReportBranchClient",
        "path": "api/commission/branchClient/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      }
    ]
  },
  {
    "name": "Lookup",
    "actions": [
      {
        "httpMethod": "get",
        "methodName": "getAutoCompleteManager",
        "path": "api/lookup/manager/{filter}/{codeOffice}/{roleCode}",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "codeOffice",
            "type": "System.Int32",
            "nameType": "Int32",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "roleCode",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          }
        ]
      },
      {
        "httpMethod": "get",
        "methodName": "getListManagerCollectionEmail",
        "path": "api/lookup/managerCollectionEmail/{companyId}/{id}",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "companyId",
            "type": "System.Int32",
            "nameType": "Int32",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "id",
            "type": "System.Int32",
            "nameType": "Int32",
            "isOptional": false,
            "isQueryParam": true
          }
        ]
      },
      {
        "httpMethod": "get",
        "methodName": "getAutoCompleteAgent",
        "path": "api/lookup/agent/{idManager}/{filter}/{codeOffice}/{roleCode}/{networkId}",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "idManager",
            "type": "System.Int32",
            "nameType": "Int32",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "filter",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "codeOffice",
            "type": "System.Int32",
            "nameType": "Int32",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "roleCode",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "networkId",
            "type": "System.Nullable`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]",
            "nameType": "Nullable`1",
            "isOptional": true,
            "isQueryParam": true
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getAutoCompleteOffice",
        "path": "api/lookup/office/{filter}",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          }
        ]
      },
      {
        "httpMethod": "get",
        "methodName": "getDocumentType",
        "path": "api/lookup/documentType",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "getListRamo",
        "path": "api/lookup/ramo?sectorCode={sectorCode}",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "defaultValue": "",
            "name": "sectorCode",
            "type": "System.String",
            "nameType": "String",
            "isOptional": true,
            "isQueryParam": true
          }
        ]
      },
      {
        "httpMethod": "get",
        "methodName": "getListRamoBySectorCode",
        "path": "api/lookup/ramo/{sectorCode}",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "defaultValue": "",
            "name": "sectorCode",
            "type": "System.String",
            "nameType": "String",
            "isOptional": true,
            "isQueryParam": true
          }
        ]
      },
      {
        "httpMethod": "get",
        "methodName": "getListRamoMapfre",
        "path": "api/lookup/ramo/mapfre?companyId={companyId}",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "defaultValue": 0,
            "name": "companyId",
            "type": "System.Int32",
            "nameType": "Int32",
            "isOptional": true,
            "isQueryParam": true
          }
        ]
      },
      {
        "httpMethod": "get",
        "methodName": "getListRamoMapfreByCompanyId",
        "path": "api/lookup/ramo/mapfre/{companyId}",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "defaultValue": 0,
            "name": "companyId",
            "type": "System.Int32",
            "nameType": "Int32",
            "isOptional": true,
            "isQueryParam": true
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getLookupAgentManagerByPolicy",
        "path": "api/lookup/agentManager/policy",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Lookup.AgentManagerByPolicyFilterRp",
            "nameType": "AgentManagerByPolicyFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "get",
        "methodName": "getReplacementCarStatus",
        "path": "api/lookup/replacementCar/status",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "getReplacementCarProvider",
        "path": "api/lookup/replacementCar/providers",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "getLookupValidadeAgent",
        "path": "api/lookup/validadeAgent/{agentId}/{agentIdSelected}/{companyId}/{roleCode}",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "agentId",
            "type": "System.Int32",
            "nameType": "Int32",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "agentIdSelected",
            "type": "System.Int32",
            "nameType": "Int32",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "companyId",
            "type": "System.Int32",
            "nameType": "Int32",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "roleCode",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getLookupValidateAgent",
        "path": "api/lookup/validateAgent",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "validateAgent",
            "type": "Gcw.Rest.Model.Lookup.ValidateAgentRp",
            "nameType": "ValidateAgentRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "get",
        "methodName": "GetAllNetworks",
        "path": "api/lookup/network",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      }
    ]
  },
  {
    "name": "Policy",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getListPagingPolicyFilter",
        "path": "api/policy/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Portfolio.PolicyFilterRp",
            "nameType": "PolicyFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getReportListPolicyFilter",
        "path": "api/policy/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "getValidatePolicy",
        "path": "api/policy/validate/{policyNumber}/{roleType}/{codeManagerOffice}",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "policyNumber",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "roleType",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "codeManagerOffice",
            "type": "System.Int32",
            "nameType": "Int32",
            "isOptional": false,
            "isQueryParam": true
          }
        ]
      },
      {
        "httpMethod": "get",
        "methodName": "getListPolicySegmentationType",
        "path": "api/policy/segmentation",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "post",
        "methodName": "SendPoliciesUncertified",
        "path": "api/policy/send",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "request",
            "type": "Gcw.Rest.Model.Renovation.SendPolicyRq",
            "nameType": "SendPolicyRq",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      }
    ]
  },
  {
    "name": "Sector",
    "actions": [
      {
        "httpMethod": "get",
        "methodName": "GetSectors",
        "path": "api/sector",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "GetListSubSector",
        "path": "api/sector/{sectorId}/subsector",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "sectorId",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          }
        ]
      },
      {
        "httpMethod": "get",
        "methodName": "GetListRamosBySector",
        "path": "api/sector/{sectorId}/subsector/{subSectorId}/ramo",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "sectorId",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "subSectorId",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          }
        ]
      }
    ]
  },
  {
    "name": "Renewal",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getDetailRenewalPaging",
        "path": "api/renewal/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Portfolio.PolicyDetailFilterRp",
            "nameType": "PolicyDetailFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getDetailRenewal",
        "path": "api/renewal/list",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Portfolio.PolicyDetailFilterRp",
            "nameType": "PolicyDetailFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getRenewalDownload",
        "path": "api/renewal/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      },
      {
        "httpMethod": "post",
        "methodName": "getRenewalSinisterDownload",
        "path": "api/renewal/download/sinister",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      },
      {
        "httpMethod": "post",
        "methodName": "getRenewalEmail",
        "path": "api/renewal/email",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Portfolio.EmailRenewalRp",
            "nameType": "EmailRenewalRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getDataPolicyElectronic",
        "path": "api/renewal/dataPolicyElectronic",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Portfolio.PolicyElectronicFilterRp",
            "nameType": "PolicyElectronicFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getregisterFlagPolicyElectronic",
        "path": "api/renewal/registerFlagPolicyElectronic",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Portfolio.PolicyElectronicFilterRp",
            "nameType": "PolicyElectronicFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      }
    ]
  },
  {
    "name": "Benefit",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getBenefitListPagingBenefitFilter",
        "path": "api/benefit/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Benefit.BenefitFilterRp",
            "nameType": "BenefitFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getBenefitListPBenefitFilter",
        "path": "api/benefit/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      }
    ]
  },
  {
    "name": "LiquidationSoat",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getCollectionSoatPaging",
        "path": "api/collection/soat/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Collection.SoatFilterRp",
            "nameType": "SoatFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getCollectionRegisterSoat",
        "path": "api/collection/soat/register",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Collection.SoatRegisterFilterRp",
            "nameType": "SoatRegisterFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getCollectionRegisterSoatSelected",
        "path": "api/collection/soat/register/selected",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Collection.SoatRegisterSelectedFilterRp",
            "nameType": "SoatRegisterSelectedFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getCollectionReportSoat",
        "path": "api/collection/soat/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      },
      {
        "httpMethod": "post",
        "methodName": "getCollectionReportSoatV2",
        "path": "api/collection/soat/download/{extension}",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": [
          {
            "name": "extension",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getCollectionListSoatHeaderPaging",
        "path": "api/collection/soat/history/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Collection.SoatRegisterFilterRp",
            "nameType": "SoatRegisterFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "get",
        "methodName": "getCollectionCancelSoatCab",
        "path": "api/collection/soat/history/cancel/{preSettlement}",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "preSettlement",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getCollectionReportSoatHistory",
        "path": "api/collection/soat/history/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      },
      {
        "httpMethod": "post",
        "methodName": "getCollectionSendEmailConsult",
        "path": "api/collection/soat/email/consult",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Core.Entities.BaseSendEmail",
            "nameType": "BaseSendEmail",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      }
    ]
  },
  {
    "name": "Person",
    "actions": [
      {
        "httpMethod": "get",
        "methodName": "getListPersonType",
        "path": "api/person/type",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "post",
        "methodName": "getListPagingPersonFilter",
        "path": "api/person/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Lookup.PersonFilterRp",
            "nameType": "PersonFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getListPagingPersonEpsFilter",
        "path": "api/person/eps/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Lookup.PersonFilterRp",
            "nameType": "PersonFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      }
    ]
  },
  {
    "name": "MapfreDollar",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getMapfreDollarListMapfreDollarPaging",
        "path": "api/mapfredollar/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.MapfreDollar.MapfreDollarFilterRp",
            "nameType": "MapfreDollarFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getMapfreDollarReportMapfreDollar",
        "path": "api/mapfredollar/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      },
      {
        "httpMethod": "post",
        "methodName": "getMapfreDollarListStateMapfreDollarPaging",
        "path": "api/mapfredollar/state/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.MapfreDollar.StateMapfreDollarFilterRp",
            "nameType": "StateMapfreDollarFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getMapfreDollarReportStateMapfreDollar",
        "path": "api/mapfredollar/state/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      }
    ]
  },
  {
    "name": "Element",
    "actions": [
      {
        "httpMethod": "get",
        "methodName": "getListPaidDocumentType",
        "path": "api/lookup/document/paid",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "getLookupListCommercialSegment",
        "path": "api/lookup/commercialSegment",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "getListSector",
        "path": "api/lookup/sector",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "getListProcessDate",
        "path": "api/lookup/processDate",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "getListPolicyType",
        "path": "api/lookup/policyType",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "getListSituation",
        "path": "api/lookup/situation",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "getListDocumentTypePolicy",
        "path": "api/lookup/document/type",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "getLookupListStateRenovation",
        "path": "api/lookup/stateRenovation",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "getLookupListStateCCC",
        "path": "api/lookup/stateCCC",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      }
    ]
  },
  {
    "name": "SinisterCar",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getSinisterListSinisterCarPaging",
        "path": "api/sinister/car/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Sinister.SinisterCarFilterRp",
            "nameType": "SinisterCarFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getSinisterReportSinister",
        "path": "api/sinister/car/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "getSinisterSinisterCarDetail",
        "path": "api/sinister/car/detail/{companyId}/{numberSinister}/{roleType}",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "companyId",
            "type": "System.Int32",
            "nameType": "Int32",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "numberSinister",
            "type": "System.Int64",
            "nameType": "Int64",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "roleType",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          }
        ]
      },
      {
        "httpMethod": "get",
        "methodName": "getSinisterReportSinisterCarDetailDownload",
        "path": "api/sinister/car/detail/download/{companyId}/{numberSinister}/{roleType}/{agentId}",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": [
          {
            "name": "companyId",
            "type": "System.Int32",
            "nameType": "Int32",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "numberSinister",
            "type": "System.Int64",
            "nameType": "Int64",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "roleType",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "agentId",
            "type": "System.Int32",
            "nameType": "Int32",
            "isOptional": false,
            "isQueryParam": true
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getSinisterNotificationSinister",
        "path": "api/sinister/car/notification",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Sinister.EmailSinisterRp",
            "nameType": "EmailSinisterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "get",
        "methodName": "getSinisterListPayment",
        "path": "api/sinister/car/documentPayment/{checkNumber}/{companyId}/{documentNumber}",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "checkNumber",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "companyId",
            "type": "System.Int32",
            "nameType": "Int32",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "documentNumber",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          }
        ]
      },
      {
        "httpMethod": "get",
        "methodName": "getSinisterDetailPaymentDownload",
        "path": "api/sinister/car/detailPayment/download/{companyId}/{issuerVoucher}/{documentNumber}/{sinisterOrigin}/{wayPay}",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": [
          {
            "name": "companyId",
            "type": "System.Int32",
            "nameType": "Int32",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "issuerVoucher",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "documentNumber",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "sinisterOrigin",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "wayPay",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          }
        ]
      },
      {
        "httpMethod": "get",
        "methodName": "getSinisterRetentionDownload",
        "path": "api/sinister/car/retention/download/{companyId}/{retention}/{sinisterOrigin}",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": [
          {
            "name": "companyId",
            "type": "System.Int32",
            "nameType": "Int32",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "retention",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "sinisterOrigin",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          }
        ]
      },
      {
        "httpMethod": "get",
        "methodName": "getSinisterDocumentDownload",
        "path": "api/sinister/car/document/{idDocument}?formato={formato}",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "idDocument",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "formato",
            "type": "System.String",
            "nameType": "String",
            "isOptional": true,
            "isQueryParam": true
          }
        ]
      }
    ]
  },
  {
    "name": "History",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getCollectionVoucherPaymentReport",
        "path": "api/history/voucher/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      },
      {
        "httpMethod": "post",
        "methodName": "getCollectionGetDonwloadInvoice",
        "path": "api/history/invoice/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      }
    ]
  },
  {
    "name": "Payment",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getListPendingPayment",
        "path": "api/payment/pending/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Portfolio.PolicyDetailFilterRp",
            "nameType": "PolicyDetailFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getListPagingHistoryPayment",
        "path": "api/payment/history/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Portfolio.PolicyDetailFilterRp",
            "nameType": "PolicyDetailFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getReportHistoryPayment",
        "path": "api/payment/history/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      },
      {
        "httpMethod": "post",
        "methodName": "getListDocumentPayment2",
        "path": "api/payment/document/paging2",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Portfolio.PolicyDetailFilterRp",
            "nameType": "PolicyDetailFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getListDocumentPayment",
        "path": "api/payment/document/paging/group",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Portfolio.PolicyDetailFilterRp",
            "nameType": "PolicyDetailFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getReportDocumentPayment",
        "path": "api/payment/document/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": [
          {
            "name": "request",
            "type": "System.Net.Http.HttpRequestMessage",
            "nameType": "HttpRequestMessage",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getReportDocumentPayment2",
        "path": "api/payment/document/download2",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      },
      {
        "httpMethod": "post",
        "methodName": "getDocumentByNumber",
        "path": "api/payment/document",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Portfolio.PolicyDetailFilterRp",
            "nameType": "PolicyDetailFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getDocumentStateByNumber",
        "path": "api/payment/documentState",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Portfolio.PolicyDetailFilterRp",
            "nameType": "PolicyDetailFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getReportReceiptDocument",
        "path": "api/payment/document/receipt/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      },
      {
        "httpMethod": "post",
        "methodName": "getReportReceiptDocumentEmail",
        "path": "api/payment/document/receipt/email",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Portfolio.EmailRp",
            "nameType": "EmailRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getLinkPago",
        "path": "api/payment/linkPago",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Portfolio.LnkPayment",
            "nameType": "LnkPayment",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getSendLinkPago",
        "path": "api/payment/sendLinkPago",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Portfolio.LnkPayment",
            "nameType": "LnkPayment",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "get",
        "methodName": "getCoordinationTypes",
        "path": "api/lookup/bitacora/tipoCoordinacion",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "post",
        "methodName": "registerContact",
        "path": "api/payment/bitacora/add",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Portfolio.RegContact",
            "nameType": "RegContact",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getRegisteredLogs",
        "path": "api/payment/document/bitacora",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Portfolio.RegLogs",
            "nameType": "RegLogs",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getLinkAfiliacion",
        "path": "api/payment/linkAfiliacion",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Portfolio.LnkPayment",
            "nameType": "LnkPayment",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getSendLinkAfiliacion",
        "path": "api/payment/sendLinkAfiliacion",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Portfolio.LnkAfil",
            "nameType": "LnkPayment",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      }
    ]
  },
  {
    "name": "Renovation",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getRenovationListRenovationPaging",
        "path": "api/renovation/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Renovation.RenovationFilterRp",
            "nameType": "RenovationFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getRenovationReportRenovation",
        "path": "api/renovation/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      },
      {
        "httpMethod": "post",
        "methodName": "getRenovationListRenovationResumePaging",
        "path": "api/renovation/resume/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Renovation.RenovationResumeFilterRp",
            "nameType": "RenovationResumeFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getRenovationReportRenovationResume",
        "path": "api/renovation/resume/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      },
      {
        "httpMethod": "post",
        "methodName": "getRenovationResumeDetail",
        "path": "api/renovation/resume/detail",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Renovation.RenovationDetailFilterRp",
            "nameType": "RenovationDetailFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      }
    ]
  },
  {
    "name": "Cancellation",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getCollectionListCollectionPaging",
        "path": "api/collection/cancellation/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Collection.CollectionFilterRp",
            "nameType": "CollectionFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getCollectionReportListCollection",
        "path": "api/collection/cancellation/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": [
          {
            "name": "request",
            "type": "System.Net.Http.HttpRequestMessage",
            "nameType": "HttpRequestMessage",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getCollectionReceipPendingDownload",
        "path": "api/collection/cancellation/receipPending/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      }
    ]
  },
  {
    "name": "Liquidated",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getCommissionListLiquidatedPaging",
        "path": "api/commission/liquidated/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Commission.LiquidatedFilterRp",
            "nameType": "LiquidatedFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getCommissionReportLiquidated",
        "path": "api/commission/liquidated/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      },
      {
        "httpMethod": "post",
        "methodName": "getCommissionReportLiquidatedDetail",
        "path": "api/commission/liquidated/download/detail",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      },
      {
        "httpMethod": "post",
        "methodName": "getCommissionReportLiquidatedPreviousBalance",
        "path": "api/commission/liquidated/download/previousBalance",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      }
    ]
  },
  {
    "name": "Sinister",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getReplacementCar",
        "path": "api/sinister/car/replacement/search",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "request",
            "type": "Gcw.Rest.Model.Sinister.ReplacementCarRq",
            "nameType": "ReplacementCarRq",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getPayRoll",
        "path": "api/sinister/payroll/search",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "request",
            "type": "Gcw.Rest.Model.Sinister.ReplacementCarRq",
            "nameType": "ReplacementCarRq",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getPayRollDownload",
        "path": "api/sinister/download/car",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": [
          {
            "name": "request",
            "type": "Gcw.Rest.Model.Sinister.PayRollReport",
            "nameType": "PayRollReport",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "get",
        "methodName": "getProvidersRequests",
        "path": "api/sinister/provider/requests",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "post",
        "methodName": "getProvider",
        "path": "api/sinister/provider/search",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "request",
            "type": "Gcw.Rest.Model.Sinister.ProviderRq",
            "nameType": "ProviderRq",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "addProvider",
        "path": "api/sinister/provider/add",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "request",
            "type": "Gcw.Rest.Model.Sinister.ProviderRq",
            "nameType": "ProviderRq",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "updateProvider",
        "path": "api/sinister/provider/edit",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "request",
            "type": "Gcw.Rest.Model.Sinister.ProviderRq",
            "nameType": "ProviderRq",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "get",
        "methodName": "getProviderId",
        "path": "api/sinister/provider/{document}",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "document",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          }
        ]
      },
      {
        "httpMethod": "get",
        "methodName": "getCarFactories",
        "path": "api/sinister/car/factories/{name}/{company}",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "name",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          },
          {
            "name": "company",
            "type": "System.Int32",
            "nameType": "Int32",
            "isOptional": false,
            "isQueryParam": true
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "setCarFactory",
        "path": "api/sinister/car/factory/notification",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "request",
            "type": "Gcw.TaskLayer.Sinister.Model.CarFactoryNotification",
            "nameType": "CarFactoryNotification",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getPolicyPrint",
        "path": "api/sinister/policy/print",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "request",
            "type": "Gcw.Rest.Model.Sinister.PolicyPrintRq",
            "nameType": "PolicyPrintRq",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "performRequest",
        "path": "api/sinister/car/replacement/request",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "request",
            "type": "Gcw.Rest.Model.Sinister.ReplacementDetailCarRq",
            "nameType": "ReplacementDetailCarRq",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "RptPayRoll",
        "path": "api/Sinister?extension={extension}",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "Byte[]",
        "parameters": [
          {
            "name": "request",
            "type": "Gcw.Rest.Model.Sinister.PayRollReport",
            "nameType": "PayRollReport",
            "isOptional": false,
            "isQueryParam": false
          },
          {
            "name": "extension",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          }
        ]
      }
    ]
  },
  {
    "name": "State",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getCollectionListStatePaging",
        "path": "api/collection/state/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Collection.DocumentStateFilterRp",
            "nameType": "DocumentStateFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getReportListState",
        "path": "api/collection/state/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      }
    ]
  },
  {
    "name": "Parameter",
    "actions": [
      {
        "httpMethod": "get",
        "methodName": "getListParameterByGroup",
        "path": "api/lookup/parameterByGroup/{codeGroup}",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "codeGroup",
            "type": "System.String",
            "nameType": "String",
            "isOptional": false,
            "isQueryParam": true
          }
        ]
      },
      {
        "httpMethod": "get",
        "methodName": "getListStatusPolicy",
        "path": "api/lookup/statusPolicy",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "getListCoinGlobal",
        "path": "api/lookup/coinGlobal",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "getListCoin",
        "path": "api/lookup/coin",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "GetLookupListTypeliquidated",
        "path": "api/lookup/typeLiquidated",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "getLookupTypeClient",
        "path": "api/lookup/typeClient",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "getLookupStateSinister",
        "path": "api/lookup/stateSinister",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "getLookupGeneralStatus",
        "path": "api/lookup/stateGeneral",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      },
      {
        "httpMethod": "get",
        "methodName": "getLookupExternalLink",
        "path": "api/lookup/externalLink",
        "supportdHttpMethos": [
          "get"
        ],
        "returnType": "IHttpActionResult",
        "parameters": []
      }
    ]
  },
  {
    "name": "InvoicesIssued",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getCollectionInvoicesIssuedListPaging",
        "path": "api/invoicesIssued/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Collection.InvoicesIssuedFilterRp",
            "nameType": "InvoicesIssuedFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getCollectionInvoicesIssuedReport",
        "path": "api/invoicesIssued/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": [
          {
            "name": "request",
            "type": "System.Net.Http.HttpRequestMessage",
            "nameType": "HttpRequestMessage",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      }
    ]
  },
  {
    "name": "VoucherForwarded",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getCollectionListVoucherForwardedPaging",
        "path": "api/collection/VoucherForwarded/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Collection.VoucherForwardedFilterRp",
            "nameType": "VoucherForwardedFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getCollectionReportVoucherForwarded",
        "path": "api/collection/VoucherForwarded/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      }
    ]
  },
  {
    "name": "Movement",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getCommissionListMovement",
        "path": "api/commission/movement/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Commission.MovementFilterRp",
            "nameType": "MovementFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getCommissionReportMovement",
        "path": "api/commission/movement/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      }
    ]
  },
  {
    "name": "Document",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getCollectionReportStatementAccount",
        "path": "api/collection/document/statementAccount/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      }
    ]
  },
  {
    "name": "StateReceipt",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getCommissionListStateReceipt",
        "path": "api/commission/stateReceipt/paging",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "filter",
            "type": "Gcw.Rest.Model.Commission.StateReceiptFilterRp",
            "nameType": "StateReceiptFilterRp",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      },
      {
        "httpMethod": "post",
        "methodName": "getCommissionReportStateReceipt",
        "path": "api/commission/stateReceipt/download",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "HttpResponseMessage",
        "parameters": []
      }
    ]
  },
  {
    "name": "Security",
    "actions": [
      {
        "httpMethod": "post",
        "methodName": "getTicketUser",
        "path": "api/security/ticket",
        "supportdHttpMethos": [
          "post"
        ],
        "returnType": "IHttpActionResult",
        "parameters": [
          {
            "name": "securityUserRq",
            "type": "Gcw.Rest.Model.Security.SecurityUserRq",
            "nameType": "SecurityUserRq",
            "isOptional": false,
            "isQueryParam": false
          }
        ]
      }
    ]
  }
]